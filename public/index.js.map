{"version":3,"file":"index.js","sources":["../../utilities/dist/utilities/check/instance-of.js","../../utilities/dist/utilities/check/types.js","../../utilities/dist/utilities/check/data.js","../../utilities/dist/utilities/tools/tools.js","../../utilities/dist/utilities/my-location/constants.js","../../utilities/dist/utilities/dom/dom.js","../../utilities/dist/utilities/fullscreen/constants.js","../../utilities/dist/utilities/loop/loop.js","../../../node_modules/intersection-observer/intersection-observer.js","../src/adblock-detector.ts","index.ts"],"sourcesContent":["/**\n * Функция проверяет, является ли переданный объект инстансом переданного класса.\n * @param object - объект.\n * @param someClass - класс.\n * @returns true, если объект является инстансом переданного класса, иначе - false.\n * @remarks\n * Также проверяет, является ли родительский элемент объекта инстансом переданного класса.\n */\n// eslint-disable-next-line max-len\nexport const instanceOf = (object, someClass) => {\n    if (object) {\n        const targetProtoString = Object.prototype.toString.call(someClass.prototype);\n        let proto = Object.getPrototypeOf(object);\n        while (proto) {\n            if (Object.prototype.toString.call(proto) === targetProtoString)\n                return true;\n            proto = Object.getPrototypeOf(proto);\n        }\n    }\n    return false;\n};\n","import { instanceOf } from \"./instance-of\";\n/**\n * Функция проверяет, является ли переданный парамент числом.\n * @param something - параметр, который необходимо проверить.\n * @returns true, если переданный параметр является числом, иначе - false.\n */\nexport const number = (something) => {\n    return typeof something === \"number\" && !isNaN(something) && isFinite(something);\n};\n/**\n * Функция проверяет, является ли переданный параметр строкой.\n * @param something - параметр, который необходимо проверить.\n * @returns true, если переданный параметр является строкой, иначе - false.\n */\nexport const string = (something) => {\n    return typeof something === \"string\" || instanceOf(something, String);\n};\n/**\n * Функция проверяет, является ли переданный параметр объектом.\n * @param something - параметр, который необходимо проверить.\n * @returns true, если переданный параметр является объектом, иначе - false.\n */\nexport const object = (something) => {\n    return (typeof something === \"object\" &&\n        !Array.isArray(something) &&\n        something !== null);\n};\n/**\n * Функция проверяет, является ли переданный параметр строго объектом.\n * @param something - параметр, который необходимо проверить.\n * @returns true, если переданный параметр является строго объектом, иначе - false.\n * @remarks\n * Под проверкой на строгий объект подрузамевается, что объект создан с только с помощью {} или new Object().\n */\nexport const strictObject = (something) => {\n    return Object.prototype.toString.call(something) === \"[object Object]\";\n};\n/**\n * Функция проверяет, является ли переданный элемент инстансом класса HTMLElement или Document.\n * @param htmlObj - элемент, который необходимо проверить.\n * @returns true, если переданный элемент является инстансом класса HTMLElement или Document, иначе - false.\n */\nexport const htmlElement = (htmlObj) => {\n    return instanceOf(htmlObj, HTMLElement) || htmlDocumentElement(htmlObj);\n};\n/**\n * Функция проверяет, является ли переданный элемент инстансом класса Document.\n * @param doc - элемент, который необходимо проверить.\n * @returns true, если переданный элемент является инстансом класса Document.\n */\nexport const htmlDocumentElement = (doc) => {\n    return instanceOf(doc, Document);\n};\n","import * as types from \"./types\";\nimport * as tools from \"../tools/tools\";\nimport * as check from \"../check/check\";\n/**\n * Проверяет, является ли переданный объект пустым.\n * @param obj - объект, который необходимо проверить.\n * @returns true, если переданный объект является пустым, иначе false.\n */\nexport const isEmptyObject = (obj) => {\n    if (!types.object(obj))\n        throw new Error(`${obj} is not an object`);\n    for (const _ in obj)\n        return false;\n    return true;\n};\n/**\n * Проверяет, является ли переданная строка пустой, если удалить из неё все пробельные символы.\n * @param str - строка, который необходимо проверить.\n * @returns true, если переданная строка является пустой, иначе false.\n */\nexport const isEmptyString = (str) => {\n    if (!types.string(str))\n        throw new Error(`${str} is not a string`);\n    return tools.removeSpacesFromString(str).length === 0;\n};\n/**\n * Проверяет истинность переданного значения.\n * @param something - значение, которое необходимо проверить.\n * @returns true, если переданное значение является истинным, иначе false.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean#boolean_coercion\n */\nexport const isTruthy = (...something) => {\n    if (something.length <= 0)\n        throw new Error(\"Function has been called without arguments\");\n    return Boolean(something[0]);\n};\n/**\n * Проверяет, является ли переданное число неотрицательным.\n * @param num - число, которое необходимо проверить.\n * @returns true, если переданное число является неотрицательным, иначе false.\n */\nexport const isPositiveNumber = (num) => {\n    if (!types.number(num))\n        throw new Error(`${num} is not a number`);\n    return num >= 0;\n};\n/**\n * Проверяет, является ли переданный параметр корректным URL-адресом.\n * @param uri - строка, которую необходимо проверить.\n * @returns true, если переданная строка является корректным URL-адресом, иначе false.\n */\nexport const isUrl = (uri) => {\n    if (!types.string(uri))\n        throw new Error(`${uri} is not a string`);\n    return /^(((http|https|ftp):)?\\/\\/){1}(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+)/i.test(uri);\n};\n/**\n * Проверяет, является ли переданный параметр числом или строкой, содержащей число.\n * @param value - значение, которое необходимо проверить.\n * @returns true, если переданный параметр является числом или строкой, содержащей число, иначе false.\n */\nexport const isNumeric = (value) => {\n    return check.type.number(parseFloat(value)) && isFinite(value);\n};\n","import * as check from \"../check/check\";\n/**\n * Функция предназначена для для возврата нового объекта, cоединяющего свойства первого объекта со свойствами второго.\n * Если свойство существует в обоих объектах, используется значение из первого объекта.\n * @param obj1 - первый объект из которого необходимо взять свойства.\n * @param obj2 - второй объект из которого необходимо взять свойства.\n * @returns новый объект, cоединяя свойства первого объекта со свойствами второго.\n */\nexport const mergeObjectsByLeft = (obj1, obj2) => {\n    const res = {};\n    for (const prop in obj1) {\n        res[prop] = obj2[prop] ?? obj1[prop];\n    }\n    return res;\n};\n/**\n * Функция предназначена для получения случайного числа заданного порядка (По умолчанию 10).\n * @param len - порядок числа.\n * @returns случайное число заданного порядка.\n */\nexport const getRandomNumber = (len) => {\n    const initialNumber = +`1E${len || 10}`;\n    const min = (initialNumber / 10);\n    return Math.floor(min + Math.random() * (initialNumber - min));\n};\n/**\n * Функция предназначена для получения случайной строки заданной длины.\n * @param len - длина строки.\n * @returns случайную строку заданной длины.\n */\nexport const getRandomString = (len) => {\n    if (!len)\n        len = 10;\n    const chrs = \"abdehkmnpswxzABDEFGHKMNPQRSTWXZ123456789\";\n    const str = new Array(len);\n    for (let i = 0; i < len; i++) {\n        const pos = Math.floor(Math.random() * chrs.length);\n        str[i] = chrs.substring(pos, pos + 1);\n    }\n    if (!isNaN(+str[0]))\n        str[0] = \"x\";\n    return str.join(\"\");\n};\n/**\n * Преобразует строку в объект. Строка должна быть в формате, в котором пары \"ключ-значение\" разделяются определенным\n * символом (по умолчанию \"&\"), а внутри каждой пары ключ и значение разделяются знаком равенства (\"=\").\n * @param string - строка, которую необходимо парсить.\n * @param separator - разделитель, который является символом, используемым для разделения различных пар ключ-значение в строке.\n * Если разделитель не указан, функция по умолчанию использует «&».\n * @returns объект, который был преобразован из строки или null, если была передана не строка.\n */\nexport const stringToObject = (string, separator = \"&\") => {\n    if (!check.type.string(string))\n        return null;\n    const res = {};\n    string.split(separator).forEach(pair => {\n        if (!check.data.isEmptyString(pair)) {\n            const [key, value] = pair.split(\"=\");\n            res[key] = value;\n        }\n    });\n    return res;\n};\n/**\n * Преобразует объект в строку, где каждая пара ключ-значение представлена как ключ=значение, а пары разделяются\n * указанным разделителем (по умолчанию \"&\").\n * @param obj - объект, который необходимо преобразовать в строку.\n * @param separator - разделитель, который является символом, используемым для разделения различных пар ключ-значение\n * в результирующей строке. Если разделитель не указан, функция по умолчанию использует «&».\n * @returns преобразованную из объекта строку или null, если был передан не обьект.\n */\nexport const objectToString = (obj, separator = \"&\") => {\n    if (!check.type.object(obj))\n        return null;\n    return Object.entries(obj).map(pair => pair.join(\"=\")).join(separator);\n};\n/**\n * Фильтрует свойства объекта на основе функции фильтрации, предоставленной пользователем. Возвращает новый объект,\n * который включает только свойства, для которых функция фильтрации возвращает истинное значение.\n * @param obj - объект, свойства которого должны быть отфильтрованы.\n * @param fn - функция, которая принимает значение и ключ и возвращает истинное или ложное значение.\n * @returns новый объект, который включает только свойства, для которых функция фильтрации возвращает истинное значение или null,\n * если был передан не обьект.\n */\nexport const filterObject = (obj, fn) => {\n    if (!check.type.object(obj))\n        return null;\n    if (check.data.isEmptyObject(obj) || typeof fn !== \"function\")\n        return obj;\n    const res = {};\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n        if (fn(obj[key], key))\n            res[key] = obj[key];\n    }\n    return res;\n};\n/**\n * Принимает строку или число и добавляет к ней «px».\n * @param value - значение, к которому необходимо добавить \"px\".\n * @returns строка, к которой было добавлено «px».\n */\nexport const px = (value) => {\n    if (!check.type.string(value) && !check.type.number(value))\n        throw new Error(`${value} is not a string or number`);\n    return value + \"px\";\n};\n/**\n * Cоздает promise, который разрешается через указанное время (в миллисекундах). Если время не указано или время не является\n * положительным числом, оно разрешается немедленно.\n * @param time - число, представляющее задержку в миллисекундах.\n * @returns промис.\n */\nexport const delay = (time) => {\n    return new Promise(resolve => setTimeout(resolve, (check.type.number(time) && time > 0) ? time : 0));\n};\n/**\n * Принимает объект и массив строк (представляющих путь через объект) и возвращает значение по этому пути. Выдает ошибку,\n * если путь не существует в объекте или массив путей пуст.\n * @param obj - объект, из которого достается значение.\n * @param path - массив строк, каждая из которых представляет ключ в объекте или вложенный объект.\n * @returns возвращает значение по заданному пути.\n */\nexport const getObjValueByPath = (obj, path) => {\n    if (!check.type.strictObject(obj))\n        throw new Error(`${obj} is not an object`);\n    if (!Array.isArray(path))\n        throw new Error(`${path} is not an array`);\n    if (path.length === 0)\n        return undefined;\n    let objectReference = obj;\n    for (let i = 0; i < path.length - 1; i++) {\n        if (!check.type.string(path[i]))\n            throw new Error(`${path[i]} is not a string`);\n        if (!check.type.strictObject(objectReference[path[i]]))\n            throw new Error(`Object does not have this path - ${path}`);\n        objectReference = objectReference[path[i]];\n    }\n    return objectReference[path[path.length - 1]];\n};\n/**\n * Устанавливает значение по указанному пути в объекте. Выдает ошибку, если путь не существует в объекте или массив путей пуст.\n * @param obj - объект, в котором устанавливается значение.\n * @param value - значение, которое необходимо установить.\n * @param path - массив строк, каждая из которых представляет ключ в объекте или вложенный объект.\n * @returns объект, с указанными значениями.\n */\nexport const setValueInObjByPath = (obj, value, path) => {\n    if (!check.type.strictObject(obj))\n        throw new Error(`${obj} is not an object`);\n    if (!Array.isArray(path))\n        throw new Error(`${path} is not an array`);\n    if (path.length === 0)\n        return obj;\n    let objectReference = obj;\n    for (let i = 0; i < path.length - 1; i++) {\n        if (!check.type.string(path[i]))\n            throw new Error(`${path[i]} is not a string`);\n        if (check.type.strictObject(objectReference[path[i]])) {\n            objectReference = objectReference[path[i]];\n        }\n        else {\n            throw new Error(`Object does not have this path - ${path}`);\n        }\n    }\n    if (Object.prototype.hasOwnProperty.call(objectReference, path[path.length - 1])) {\n        objectReference[path[path.length - 1]] = value;\n    }\n    else {\n        throw new Error(`Object does not have this path - ${path}`);\n    }\n    return obj;\n};\n/**\n * Принимает строку и возвращает новую строку, в которой удалены все пробельные символы.\n * @param str - cтрока, из которой удаляются пробельные символы.\n * @returns новую строку, в которой удалены все пробельные символы.\n */\nexport const removeSpacesFromString = (str) => {\n    if (!check.type.string(str))\n        throw new Error(`${str} is not a string`);\n    return str.replace(/\\s/g, \"\");\n};\n/**\n * Принимает строку и проверяет, начинается ли она с символа «#».  Если нет, он добавляет '#' к строке и возвращает ее.\n * @param id - идентификатор, перед которым может потребоваться '#'.\n * @returns строку с символом «#» в начале.\n */\nexport const htmlId = (id) => {\n    if (!check.type.string(id))\n        throw new Error(\"Element id must be a string\");\n    if (check.data.isEmptyString(id))\n        throw new Error(\"Element id cannot be an empty string\");\n    return /^#.+/.test(id) ? id : `#${id}`;\n};\n/**\n * Принимает строку и проверяет, начинается ли она с «data-».  Если нет, он добавляет «data» к строке и возвращает ее.\n * @param dataAttribute - атрибут данных, перед которым может потребоваться добавление «data-».\n * @returns строку с добавлением «data-».\n */\nexport const htmlDataAttribute = (dataAttribute) => {\n    if (!check.type.string(dataAttribute))\n        throw new Error(\"Data attribute must be a string\");\n    if (check.data.isEmptyString(dataAttribute))\n        throw new Error(\"Data attribute cannot be an empty string\");\n    return /^data-.+/.test(dataAttribute) ? dataAttribute : `data-${dataAttribute}`;\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getPromiseState = (promise) => {\n    if (!(promise instanceof Promise))\n        return Promise.reject(new Error(\"getPromiseState expects a promise.\"));\n    return Promise.race([promise, \"pending\"]).then(value => value === \"pending\" ? \"pending\" : \"resolved\", () => \"rejected\");\n};\n/**\n * hasOwnProperties - проверяет, есть ли у переданного объекта все свойства из массива.\n *\n * @param obj - объект со свойствами.\n * @param keys - массив строк, содержащий свойства объекта.\n * @returns true, если все свойства из массива содержатся в объекте, иначе возвращает false.\n * @throws Error<\"obj\" is not an object>, если параметр obj не является объектом.\n * @throws Error<\"keys\" is not an array>, если параметр keys не является массивом.\n */\nexport const hasOwnProperties = (obj, keys) => {\n    if (!check.type.strictObject(obj))\n        throw new Error(`${obj} is not an object`);\n    if (!Array.isArray(keys))\n        throw new Error(`${keys} is not an array`);\n    return keys.every(prop => Object.prototype.hasOwnProperty.call(obj, prop));\n};\n/**\n * parseTimeString - преобразует строку формата \"hh:mm:ss\" в количество секунд.\n *\n * @param timeString - строка, в которой перечислены \"часы:минуты:секунды\", при этом числа могут быть десятичными.\n * @returns время в секундах или null, если передан неверный параметр.\n */\nexport const parseTimeString = (timeString) => {\n    if (!check.type.string(timeString) || !/^\\d+(\\.\\d+)?:\\d+(\\.\\d+)?:\\d+(\\.\\d+)?$/.test(timeString.trim()))\n        return null;\n    const timeList = timeString.split(\":\");\n    let resultSeconds = 0;\n    resultSeconds += parseFloat(timeList[0]) * 3600;\n    resultSeconds += parseFloat(timeList[1]) * 60;\n    resultSeconds += parseFloat(timeList[2]);\n    return isNaN(resultSeconds) ? null : resultSeconds;\n};\n/**\n   * getRatioOf - определяет соотношение двух сторон.\n   *\n   * @param firstSide - первая сторона.\n   * @param secondSide - вторая сторона.\n   * @returns объект, содержащий соотношение сторон.\n   * @throws Error<Parameters is not a number>, если параметр не является числом.\n   * @throws Error<Parameters can not be zero or negative number>, если параметр равен нулю или является отрицательным значением.\n   */\nexport const getRatioOf = (firstSide, secondSide) => {\n    if (!check.type.number(firstSide) || !check.type.number(secondSide))\n        throw new Error(\"Parameters is not a number\");\n    if (firstSide <= 0 || secondSide <= 0)\n        throw new Error(\"Parameters can not be zero or negative number\");\n    const originalFirstSide = firstSide;\n    const originalSecondSide = secondSide;\n    firstSide = Math.max(originalFirstSide, originalSecondSide);\n    secondSide = Math.min(originalFirstSide, originalSecondSide);\n    while (secondSide !== 0) {\n        const remainderOfDivision = firstSide % secondSide;\n        firstSide = secondSide;\n        secondSide = remainderOfDivision;\n    }\n    const ratioOfFirstSide = originalFirstSide / firstSide;\n    const ratioOfSecondSide = originalSecondSide / firstSide;\n    return Object.setPrototypeOf({\n        x: ratioOfFirstSide,\n        y: ratioOfSecondSide\n    }, {\n        toString() {\n            return `${ratioOfFirstSide}:${ratioOfSecondSide}`;\n        }\n    });\n};\n/**\n * Создает и возвращает функцию-обертку, которая вызывает переданные функции.\n *\n * @param fns - Список функций для вызова при выполнении возвращаемой функции.\n *\n * @returns\n * Функция-обертка, которая вызывает переданные функции в порядке их передачи.\n * Если переданный элемент не является функцией, он будет проигнорирован.\n * Если не передано ни одной функции, возвращаемая функция ничего не делает.\n */\nexport const fnBind = (...fns) => {\n    return () => {\n        for (const fn of fns)\n            if (typeof fn === \"function\")\n                fn();\n    };\n};\n/**\n * Парсит JSON строку в объект без выбрасывания ошибки.\n *\n * @param jsonStr - cтрока для преобразования.\n *\n * @returns результат парсинга в виде объекта, или `null`, если парсинг не удался.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const safeJsonParse = (jsonStr) => {\n    try {\n        return JSON.parse(jsonStr);\n    }\n    catch (_) {\n        return null;\n    }\n};\n","export var LocationTypes;\n(function (LocationTypes) {\n    LocationTypes[\"OnPage\"] = \"onpage\";\n    LocationTypes[\"SameDomainFrame\"] = \"samedomainiframe\";\n    LocationTypes[\"CrossDomainFrame\"] = \"crossdomainframe\";\n})(LocationTypes || (LocationTypes = {}));\nexport const PLACEMENT_SYSTEMS = [\n    { system: \"doubleclick\", parameter: \"url\" },\n    { system: \"betweendigital\", parameter: \"ref\" },\n    { system: \"vidroll.ru\", parameter: \"wpl\" },\n    { system: \"video-play.ru\", parameter: \"wpl\" }\n];\n","import * as check from \"../check/check\";\n/**\n * Устанавливает свойства элемента с помощью функции установки свойств.\n * @param element - элемент, для которого устанавливаются свойства.\n * @param properties - свойства для установки.\n * @param propertySetter - функция установки свойства.\n */\nconst setProperties = (element, properties, propertySetter) => {\n    if ((!check.type.htmlElement(element) && !(element instanceof SVGElement)) || !check.type.strictObject(properties))\n        return;\n    for (const property in properties) {\n        const value = check.type.number(properties[property]) ? String(properties[property]) : properties[property];\n        if (check.type.string(value) && !check.data.isEmptyString(value)) {\n            propertySetter(element, property, value);\n        }\n    }\n};\n/**\n * Устанавливает стили для элемента.\n * @param element - элемент, для которого устанавливаются стили.\n * @param styles - устанавливаемые стили.\n */\nexport const setStyles = (element, styles) => setProperties(element, styles, (el, prop, val) => el.style.setProperty(prop, val));\n/**\n * Устанавливает атрибуты для элемента.\n * @param element - элемент, для которого устанавливаются атрибуты.\n * @param attributes - устанавливаемые атрибуты.\n */\nexport const setAttributes = (element, attributes) => setProperties(element, attributes, (el, prop, val) => el.setAttribute(prop, val));\n/**\n * Вставляет элементы в другой элемент.\n * @param element - элемент, в который вставляются остальные элементы.\n * @param elements - элементы для вставки.\n */\nexport const insert = (element, ...elements) => {\n    if (!check.type.htmlElement(element))\n        return;\n    const finalList = [];\n    for (let i = 0; i < elements.length; i++) {\n        const elem = elements[i];\n        if (check.type.htmlElement(element) && elem?.nodeType === 1)\n            finalList.push(elem);\n    }\n    element.append(...finalList);\n};\n","export const MAX_FULLSCREEN_CHECK_DURATION = 1000;\nexport const DEFAULT_FULLSCREEN_CHECK_INTERVAL = 100;\nexport const IOS_WEBKIT_VIDEO_FS_API = {\n    displayingFullscreen: \"webkitDisplayingFullscreen\",\n    requestFullscreen: \"webkitEnterFullscreen\",\n    exitFullscreen: \"webkitExitFullscreen\",\n    fullscreenEnabled: \"webkitSupportsFullscreen\"\n};\nexport var Vendors;\n(function (Vendors) {\n    Vendors[\"Webkit\"] = \"webkit\";\n    Vendors[\"Moz\"] = \"moz\";\n    Vendors[\"Ms\"] = \"ms\";\n    Vendors[\"Web\"] = \"web\";\n    Vendors[\"DisabledWebkit\"] = \"webkit_ios\";\n    Vendors[\"Unknown\"] = \"unknown\";\n})(Vendors || (Vendors = {}));\nexport const FS_API = {\n    [Vendors.Webkit]: {\n        fullscreenEnabled: \"webkitFullscreenEnabled\",\n        fullscreenElement: \"webkitFullscreenElement\",\n        requestFullscreen: \"webkitRequestFullscreen\",\n        exitFullscreen: \"webkitExitFullscreen\",\n        fullscreenChangeEvent: \"webkitfullscreenchange\",\n        fullscreenErrorEvent: \"webkitfullscreenerror\",\n        pseudoClass: \"-webkit-full-screen\"\n    },\n    [Vendors.Moz]: {\n        fullscreenEnabled: \"mozFullScreenEnabled\",\n        fullscreenElement: \"mozFullScreenElement\",\n        requestFullscreen: \"mozRequestFullScreen\",\n        exitFullscreen: \"mozCancelFullScreen\",\n        fullscreenChangeEvent: \"mozfullscreenchange\",\n        fullscreenErrorEvent: \"mozfullscreenerror\",\n        pseudoClass: \"-moz-full-screen\"\n    },\n    [Vendors.Ms]: {\n        fullscreenEnabled: \"msFullscreenEnabled\",\n        fullscreenElement: \"msFullscreenElement\",\n        requestFullscreen: \"msRequestFullscreen\",\n        exitFullscreen: \"msExitFullscreen\",\n        fullscreenChangeEvent: \"MSFullscreenChange\",\n        fullscreenErrorEvent: \"MSFullscreenError\",\n        pseudoClass: \"-ms-fullscreen\"\n    },\n    [Vendors.Web]: {\n        fullscreenEnabled: \"fullscreenEnabled\",\n        fullscreenElement: \"fullscreenElement\",\n        requestFullscreen: \"requestFullscreen\",\n        exitFullscreen: \"exitFullscreen\",\n        fullscreenChangeEvent: \"fullscreenchange\",\n        fullscreenErrorEvent: \"fullscreenerror\",\n        pseudoClass: \"fullscreen\",\n    }\n};\n","import * as check from \"../check/check\";\n/**\n * Регулярно вызывает переданную функцию через интервал времению.\n */\nexport class Loop {\n    /**\n     * Числовой id setTimeout.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#return_value\n     */\n    timeoutId;\n    /**\n     * Задержка в миллисекундах.\n     */\n    timeout;\n    /**\n     * Функция которую надо вызвать.\n     */\n    cb;\n    /**\n     * Флаг, указывающий, следует ли продолжать выполнение цикла.\n     */\n    shouldContinue;\n    /**\n     * @param cb - функция которую надо вызвать.\n     * @param timeout - задержка в миллисекундах.\n     */\n    constructor(cb, timeout = 0) {\n        this.cb = cb;\n        this.timeoutId = null;\n        this.timeout = check.type.number(timeout) && timeout >= 0 ? timeout : 0;\n        this.shouldContinue = false;\n    }\n    /**\n     * Метод представляет одну итерацию цикла, вызывает переданную функцию и\n     * запускает таймер на следующий вызов.\n     */\n    loopIteration() {\n        if (!this.shouldContinue)\n            return;\n        this.cb();\n        this.timeoutId = setTimeout(this.loopIteration.bind(this), this.timeout);\n    }\n    /**\n     * Запускает цикл вызовов.\n     */\n    start() {\n        if (this.timeoutId !== null)\n            return;\n        this.shouldContinue = true;\n        this.loopIteration();\n    }\n    /**\n     * Останавливает цикл вызовов.\n     */\n    stop() {\n        if (this.timeoutId === null)\n            return;\n        clearTimeout(this.timeoutId);\n        this.shouldContinue = false;\n        this.timeoutId = null;\n    }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detachEvent == 'function') {\n    node.detachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","import { DOM, Loop } from \"@adr/utilities\";\n\n// eslint-disable-next-line max-len\nexport const AD_CLASSES = \"discounts-section tpl-wrapper app-container adsblock _vwmso abort-on-property-read NativeAd dom_annotate_ad_image_ad q-box vda-closeplay content-list__ad-label ad banner adriver tracker analitics ads reklama ad-sidebar adsbox adblock-blocker\";\nexport const INTERVAL = 50;\nexport const TIMEOUT = 500;\nexport const EXTR_TIME_TO_CHECK = 100;\nexport const SIZE = \"100px\";\nexport const OPACITY = \"1\";\n\n/**\n * Класс для обнаружения наличия блокировщика рекламы.\n */\nclass AdblockDetector {\n\n    /**\n     * Проверяет, активен ли блокировщик рекламы.\n     * \n     * @returns  Промис, который разрешается в `true`, если обнаружен блокировщик рекламы, \n     * в противном случае в `false`.\n     */\n    public static check(): Promise<boolean> {\n\n        const adElement = this.createAdElement();\n\n        return new Promise((resolve) => {\n\n            let timeoutId: ReturnType<typeof setTimeout> | null = null;\n\n            const cleanup = (): void => {\n\n                if (timeoutId)\n                    clearTimeout(timeoutId);\n                else\n                    document.removeEventListener(\"DOMContentLoaded\", handleContentLoaded);\n\n                loop.stop();\n            };\n\n            const handleContentLoaded = (): void => {\n                setTimeout(() => {\n                    resolve(this.checkStyles(adElement));\n                    cleanup();\n                }, EXTR_TIME_TO_CHECK);\n            };\n\n            const loop = new Loop(() => {\n                if (this.checkStyles(adElement)) {\n                    cleanup();\n                    resolve(true);\n                }\n            }, INTERVAL);\n\n            adElement.className = AD_CLASSES;\n            adElement.id = \"adriver\";\n            adElement.setAttribute(\"data-track\", \"ad-iframe-top\");\n\n            if (document.readyState === \"loading\")\n                document.addEventListener(\"DOMContentLoaded\", handleContentLoaded);\n            else {\n                timeoutId = setTimeout(() => {\n                    resolve(this.checkStyles(adElement));\n                    cleanup();\n                }, TIMEOUT);\n            }\n\n            loop.start();\n\n        });\n    }\n\n    /**\n     * Создает скрытый элемент рекламы для обнаружения блокировщика рекламы.\n     * \n     * @returns Созданный элемент рекламы.\n     */\n    private static createAdElement(): HTMLDivElement {\n        const adElement = document.createElement(\"div\");\n        const ahref = document.createElement(\"a\");\n\n        DOM.setStyles(ahref, {\n            width: SIZE,\n            height: SIZE,\n            opacity: OPACITY,\n            display: \"block\",\n            visibility: \"visible\",\n            background: \"red\"\n        });\n        ahref.href = \"https://bit.ly/\";\n        document.body.append(ahref);\n        return ahref;\n    }\n\n    /**\n     * Проверяет стили предоставленного элемента для обнаружения блокировщика рекламы.\n     * \n     * @param element - элемент для проверки.\n     * \n     * @returns `true`, если обнаружен блокировщик рекламы, в противном случае `false`.\n     */\n    private static checkStyles(element: HTMLElement): boolean {\n\n        const elementStyles = window.getComputedStyle(element);\n        return (\n            elementStyles.display === \"none\" ||\n            elementStyles.visibility === \"hidden\" ||\n            elementStyles.height !== SIZE ||\n            elementStyles.width !== SIZE ||\n            elementStyles.opacity !== OPACITY\n        );\n    }\n\n}\n\nexport default AdblockDetector;\n","import AdblockDetector from \"../src/adblock-detector\";\n\nconst spanEl = document.getElementById(\"result\");\n\nAdblockDetector.check().then((result) => {\n    spanEl!.textContent = `Блокировщик${result ? \"\" : \" не\"} обнаружен`;\n    spanEl!.style.color = result ? \"red\" : \"green\";\n});\n"],"names":["types.string","tools.removeSpacesFromString","check.type.string","check.type.htmlElement","check.type.strictObject","check.type.number","check.data.isEmptyString","DOM.setStyles"],"mappings":"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","x_google_ignoreList":[8]}